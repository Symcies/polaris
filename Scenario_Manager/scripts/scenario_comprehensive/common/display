#!/bin/bash
_str_to_time()
{
    local time_str=${1}
    if [ ${time_str} = "0" ]
    then
        time_value=0
    elif [ ${#time_str} == 5 ] #hh:mm"
    then
        arr=(${time_str//:/ })
        if [ ${arr[0]:0:1} = "0" ]
        then
            hour=${arr[0]:1:1}
        else
            hour=${arr[0]}
        fi
        if [ ${arr[1]:0:1} = "0" ]
        then
            minute=${arr[1]:1:1}
        else
            minute=${arr[1]}
        fi
        time_value=$((${hour}*3600+${minute}*60))
    else    
        arr=(${time_str//:/ })
        if [ ${arr[0]:0:1} = "0" ]
        then
            hour=${arr[0]:1:1}
        else
            hour=${arr[0]}
        fi
        if [ ${arr[1]:0:1} = "0" ]
        then
            minute=${arr[1]:1:1}
        else
            minute=${arr[1]}
        fi
        if [ ${arr[2]:0:1} = "0" ]
        then
            second=${arr[2]:1:1}
        else
            second=${arr[2]}
        fi
        time_value=$((${hour}*3600+${minute}*60+${second}))
    fi
}

sub_dir=$2
target_dir=$1
file=${target_dir}/${sub_dir}/summary.csv
weather_type=$2
printf "%12s" ${sub_dir}
not_ready_line="---------------------------------------------------------------------------------------------------------------------------------"
if [ ! -f ${file} ];
then
    printf "%132s" ${not_ready_line}
else
    str=`tail -n 1 ${file} | sed 's/,/ /g'`
    if [ ${str:0:1} = "t" ] 
    then
    printf "%132s" ${not_ready_line}
        #echo "  " ${not_ready_line}
    else
        str=`tail -n 1 ${file} | head -n 1 | sed 's/,/ /g'`
        if [ ${str:0:1} = "t" ]
        then 
            printf "%132s" ${not_ready_line}
            #echo "  " ${not_ready_line}
        else
            data_str=`echo ${str} | cut -d' ' -f1-6`
            run_time_str=`echo ${str} | cut -d' ' -f9`
            mem_usage=`echo ${str} | cut -d' ' -f11`
            mem_percentage=`echo ${str} | cut -d' ' -f12`
            for word in ${data_str}
            do
                printf "%12s" ${word}
            done
            start_time_str=`grep starting_time_hh_mm ${target_dir}/${sub_dir}/scenario.json | cut -d' ' -f3 | cut -d'"' -f2` 
            _str_to_time ${start_time_str}
            start_time=${time_value}
            end_time_str=`grep ending_time_hh_mm ${target_dir}/${sub_dir}/scenario.json | cut -d' ' -f3 | cut -d'"' -f2` 
            _str_to_time ${end_time_str}
            end_time=${time_value}
            current_time_str=`echo ${str} | cut -d' ' -f1`
            _str_to_time ${current_time_str}
            current_time=${time_value}
            current_duration=`expr ${current_time} - ${start_time}`
            total_duration=`expr ${end_time} - ${start_time}`
            percentage=`echo "scale = 2; ${current_duration} / ${total_duration} * 100" | bc | cut -d'.' -f1`
            printf "%11s%%" ${percentage}
            printf "%12s" ${run_time_str}
            if [ ${#run_time_str} = "00:00:00" ] || [ ${current_duration} -eq 0 ] 
            then
                printf "%12s" "--------"
                printf "%12s" "--------"
                printf "%12s" "--------"
            else
                _str_to_time ${run_time_str}
                run_time=${time_value}
                remaining_time=`echo "scale = 2; ${run_time} * (${total_duration} - ${current_duration}) / ${current_duration}" | bc | cut -d'.' -f1`
                ((h=remaining_time/3600))
                ((m=remaining_time%3600/60))
                ((s=remaining_time%60))
                remaining_time_str=`printf "%02d:%02d:%02d" $h $m $s`
                printf "%12s" $remaining_time_str
                printf "%11sM" $mem_usage
                printf "%11s%%" $mem_percentage
            fi
        fi
    fi
fi
# print job status
job_id=`cat weather_jobs | grep ${weather_type} | cut -d' ' -f2`
status=`qstat | grep ${job_id} | tr -s ' ' | cut -d' ' -f5`
if [ ${#status} -eq 0 ]
then
    printf "%10s\n" "--------"
else
    printf "%10s\n" ${status}
fi
